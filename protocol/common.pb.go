// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package SAUSAGE_SHOOT_OSS

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 玩家注册
type Player struct {
	OpenId               int64    `protobuf:"varint,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex                  int64    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetOpenId() int64 {
	if m != nil {
		return m.OpenId
	}
	return 0
}

func (m *Player) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Player) GetSex() int64 {
	if m != nil {
		return m.Sex
	}
	return 0
}

// 时间
type Time struct {
	EventTime            string   `protobuf:"bytes,1,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

func init() {
	proto.RegisterType((*Player)(nil), "SAUSAGE_SHOOT_OSS.Player")
	proto.RegisterType((*Time)(nil), "SAUSAGE_SHOOT_OSS.Time")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x0c, 0x76, 0x0c, 0x0d, 0x76, 0x74,
	0x77, 0x8d, 0x0f, 0xf6, 0xf0, 0xf7, 0x0f, 0x89, 0xf7, 0x0f, 0x0e, 0x56, 0xf2, 0xe7, 0x62, 0x0b,
	0xc8, 0x49, 0xac, 0x4c, 0x2d, 0x12, 0x12, 0xe7, 0x62, 0xcf, 0x2f, 0x48, 0xcd, 0x8b, 0xcf, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0x03, 0x71, 0x3d, 0x53, 0x84, 0xa4, 0xb8, 0x38,
	0xf2, 0x32, 0x93, 0xb3, 0xf3, 0x12, 0x73, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xe0,
	0x7c, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xd4, 0x0a, 0x09, 0x66, 0xb0, 0x06, 0x10, 0x53, 0x49, 0x95,
	0x8b, 0x25, 0x24, 0x33, 0x37, 0x55, 0x48, 0x96, 0x8b, 0x2b, 0xb5, 0x2c, 0x35, 0xaf, 0x24, 0xbe,
	0x24, 0x33, 0x37, 0x15, 0x6c, 0x22, 0x67, 0x10, 0x27, 0x58, 0x04, 0x24, 0x9d, 0xc4, 0x06, 0x76,
	0x91, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x80, 0xf9, 0x51, 0x63, 0xa1, 0x00, 0x00, 0x00,
}
